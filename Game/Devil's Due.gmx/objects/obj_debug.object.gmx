<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging
//Player state debugging
draw_set_color(c_blue); //Set color
with (obj_player)
{
draw_text(100,100,"Player state: "+string(state_name)); //Player state
draw_text(100,140,"HSpeed: "+string(hsp)+ " " + "VSpeed: "+string(vsp)); //Player speed
}

draw_text(100,120,"Player fire state: "+string(obj_player_fire.state_name)); //Player fire state

draw_text(100,160,"Player fire distance: "+string(obj_player_fire.distance)) //debug distance
draw_text(100,180,"Player found target: "+string(obj_player_fire.target)) //debug target
//draw_text(250,180, "Player accuracy: "+string(obj_player_fire.randomshot)) //debug accuracy

draw_text(100,200,"Player can fire: "+string(obj_player.can_fire_bullet)); //if player can fire
draw_text(100,220,"Player firecd: "+string(obj_player.weapons_grid[obj_player.currently_equipped_weapon,5])); //player fire cooldown
draw_text(100,240,"Player equipped weapon: "+string(obj_player.weapons_grid[obj_player.currently_equipped_weapon,1])); //display wep name;
draw_text(100,260,"wep 1: "+string(obj_player.weapons_grid[1,3]));
draw_text(100,280,"wep 2: "+string(obj_player.weapons_grid[2,3]));
draw_text(100,300,"wep 3: "+string(obj_player.weapons_grid[3,3]));



draw_text(100,380,"Player pos x: "+string(obj_player.x));
draw_text(100,400,"Player pos y: "+string(obj_player.y));
draw_text(100,420,"Player possession state: "+string(obj_player_possess.state_name));
draw_text(100,440,"Currently possessed enemy id: "+string(obj_player_possess.currently_possessed_enemy));
draw_text(100,460,"Currently possessed enemy type: "+string(obj_player_possess.currently_possessed_enemy_type));
with (obj_player_possess)
if (instance_exists(currently_possessed_enemy))
draw_text(100,480,"Currently possessed enemy state "+string(currently_possessed_enemy.state_name));
//draw_text(100,500,"Currently possessed enemy: "+string(obj_player_possess.currently_possessed_enemy));

draw_text(100,500,obj_grunt.state_name)





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
