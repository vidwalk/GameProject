<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging
//Player state debugging
draw_set_color(c_blue); //Set color
draw_set_alpha(1);
with (obj_player)
{
draw_text(400,100,id);
draw_text(100,100,"Player state: "+string(state_name)); //Player state
draw_text(100,140,"HSpeed: "+string(hsp)+ " " + "VSpeed: "+string(vsp)); //Player speed
}

draw_text(100,120,"Player fire state: "+string(obj_player_fire.state_name)); //Player fire state

draw_text(100,160,"Player fire distance: "+string(obj_player_fire.distance)) //debug distance
draw_text(100,180,"Player found target: "+string(obj_player_fire.target)) //debug target
//draw_text(250,180, "Player accuracy: "+string(obj_player_fire.randomshot)) //debug accuracy

draw_text(100,200,"Player can fire: "+string(obj_player.can_fire_bullet)); //if player can fire
draw_text(100,220,"Player firecd: "+string(obj_player.weapons_grid[obj_player.currently_equipped_weapon,5])); //player fire cooldown
draw_text(100,240,"Player equipped weapon: "+string(obj_player.weapons_grid[obj_player.currently_equipped_weapon,1])); //display wep name;
draw_text(100,260,"wep 1: "+string(obj_player.weapons_grid[1,3]));
draw_text(100,280,"wep 2: "+string(obj_player.weapons_grid[2,3]));
draw_text(100,300,"wep 3: "+string(obj_player.weapons_grid[3,3]));



draw_text(100,380,"Player pos x: "+string(obj_player.x));
draw_text(100,400,"Player pos y: "+string(obj_player.y));
draw_text(100,420,"Player possession state: "+string(obj_player_possess.state_name));
draw_text(100,440,"Currently possessed enemy id: "+string(obj_player_possess.currently_possessed_enemy));
draw_text(100,460,"Currently possessed enemy type: "+string(obj_player_possess.currently_possessed_enemy_type));
with (obj_player_possess)
if (instance_exists(currently_possessed_enemy))
draw_text(100,480,"Currently possessed enemy state "+string(currently_possessed_enemy.state_name));
//draw_text(100,500,"Currently possessed enemy: "+string(obj_player_possess.currently_possessed_enemy));

//draw_text(100,500,obj_grunt.state_name)

if (instance_exists(obj_bullet_possession))
draw_text(100,520,obj_bullet_possession.image_index);

draw_text(100,540,obj_player.weapons_grid[obj_player.currently_equipped_weapon,2]); 
if (instance_exists(obj_grunt))
{
draw_text(100,560,obj_grunt.state_name)

draw_text(100,580,obj_grunt.dir)
}
draw_text(100,600,obj_player.dir)

if (instance_exists(obj_bullet))
{
with (obj_bullet)
{
if (instance_exists(creator))
{
draw_text(100,620,creator)
draw_text(100,640,shot_angle)
draw_text(100,660,creator.dir)
draw_text(300,660,shot_damage)
}
}
}

with (obj_grunt)
{
draw_text(100,680,x)
draw_text(300,680,patrol_x1)
draw_text(100,700,y)
draw_text(300,700,patrol_y1)
draw_text(100,720,"Enemy HP: "+string(hp))
draw_text(300,720,"vision: "+string(vision))
}
with (obj_player)
{
draw_text(100,740,"Player HP: "+string(hp))
draw_text(100,760,"Current wep: "+string(currently_equipped_weapon))
draw_text(100,780,"Last weapon: "+string(last_weapon));
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// AI Grid Debugging
draw_set_alpha(0.4);

for (var i = 0; i&lt;room_width;i+=obj_grid_ai.cell_width)
        draw_line(i,0,i,room_height);
for (i = 0; i&lt;  room_height; i+=obj_grid_ai.cell_height)
draw_line(0,i,room_width,i)
draw_set_alpha(1);


//Security Debug
with (obj_grunt)
{
draw_set_color(c_red)
//draw_circle(x,y,alert_range,1)
draw_set_color(c_blue)
//draw_circle(x,y,engaged_range,1)
draw_set_color(c_red)
draw_circle(x,y,7,0)
draw_circle(patrol_x2*obj_grid_ai.cell_width-obj_grid_ai.cell_width/2,patrol_y2*obj_grid_ai.cell_height-obj_grid_ai.cell_height/2,7,0)
draw_line(x,y,patrol_x2*obj_grid_ai.cell_width-obj_grid_ai.cell_width/2,patrol_y2*obj_grid_ai.cell_height-obj_grid_ai.cell_height/2)
draw_set_color(c_purple)
draw_line(patrol_x1,patrol_y1,patrol_x2,patrol_y2)
draw_set_color(c_green)
draw_line(x,y,patrol_x1,patrol_y1)

//combat
draw_set_color(c_red)
draw_set_alpha(0.1)
draw_circle(x,y,engage_range,0)
draw_set_alpha(1)


}

if (instance_exists(obj_bullet) &amp;&amp; instance_exists(obj_grunt))
draw_line(obj_grunt.x,obj_grunt.y,obj_grunt.x+lengthdir_x(obj_grunt.distance,obj_grunt.dir+obj_grunt.randomshot),obj_grunt.y+lengthdir_y(obj_grunt.distance,obj_grunt.dir+obj_grunt.randomshot)) //set target

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
