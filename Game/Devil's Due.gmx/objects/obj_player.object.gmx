<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Properties and initializations

//Movement
dir = 0; //Initial direction
movespeed = 5; //Moving speed

//Combat
possession_cd = 2; //possession cd
possession_bullet_speed = 7; //possession bullet speed
possession_bullet_range = 500; // possession bullet range

//Fire Booleans
can_fire_bullet = true; //Can fire boolean
can_fire_possession_bullet = true; //Can possess boolean

//Misc
currently_equipped_weapon = 1; //Default Equip


  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Machine
state_machine_init();

//Define States
state_create("idle",scr_player_idle);
state_create("run",scr_player_run);
//Default State
state_init("idle");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapons grid
weapons_total = 3;
//Weapons collumns
weapons_grid[0, 1] = "Name"; //name column
weapons_grid[0, 2] = "Ammo"; //ammo column
weapons_grid[0, 3] = "Available"; //collected column
weapons_grid[0, 4] = "Damage"; //damage column
weapons_grid[0, 5] = "Cooldown"; //weapon cooldown
weapons_grid[0, 6] = "Range"; //weapon range
weapons_grid[0, 7] = "Sound"; //weapon sound

//Names
weapons_grid[1,1] = "Devil Deagle";
weapons_grid[2,1] = "Devil Rifle";
weapons_grid[3,1] = "Machine Gun";
//Ammo
weapons_grid[1,2] = 10;
weapons_grid[2,2] = 100;
weapons_grid[3,2] = 1000;
//Available
weapons_grid[1,3] = true;
weapons_grid[2,3] = false;
weapons_grid[3,3] = false;
//Damage
weapons_grid[1,4] = 3;
weapons_grid[2,4] = 1;
weapons_grid[3,4] = 1;
//Cooldown
weapons_grid[1,5] = 0.7;
weapons_grid[2,5] = 0.09;
weapons_grid[3,5] = 0.05;
//Range
weapons_grid[1,6] = 1000;
weapons_grid[2,6] = 1000;
weapons_grid[3,6] = 1000;
//Sound
weapons_grid[1,7] = snd_deagle_soul;
weapons_grid[2,7] = snd_rifle_auto;
weapons_grid[3,7] = snd_deagle_simple;
//Accuracy
weapons_grid[1,8] = 2;
weapons_grid[2,8] = 9;
weapons_grid[3,8] = 5;






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize other states and objects
instance_create(0,0,obj_player_fire) // firing substate
instance_create(0,0,obj_player_possess) // possession substate
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable firing again once cd is over
can_fire_possession_bullet = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable firing again once cd is over
can_fire_bullet = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update State
state_update();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//State Execute
state_execute();
//Always update audio listener
//Audio Listener
audio_listener_position(x,y,0);
audio_listener_orientation(0,0,1000,0,-1,0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapons Wheel
//If you are at either end of the matrix, search until your currently equipped weapon, if not, search until the end
scr_player_getInput(); //get input

if (scroll_up)
{
    if (currently_equipped_weapon == weapons_total)
    {
        var i=1;
        while (weapons_grid[i,3] == false &amp;&amp; i&lt;currently_equipped_weapon)
        {
            i++;
        }
        currently_equipped_weapon = i;
    }
    else
    {
        var i=currently_equipped_weapon+1;
        while (weapons_grid[i,3] == false &amp;&amp; i&lt;=weapons_total)
        {
        if (i&lt;weapons_total)
        i++;
        else
        {
        i = currently_equipped_weapon;
        break;
        }
        }
        currently_equipped_weapon = i;
    }
}

if (scroll_down)
{
    if (currently_equipped_weapon == 1)
    {
        var i=weapons_total;
        while (weapons_grid[i,3] == false &amp;&amp; i&gt;currently_equipped_weapon)
        {
            i--;
        }
        currently_equipped_weapon = i;
    }
    else
    {
        var i=currently_equipped_weapon-1;
        while (weapons_grid[i,3] == false &amp;&amp; i&gt;=1)
        {
        i--;
        }
    currently_equipped_weapon = i;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Sprite
draw_sprite_ext(sprite_index,image_index,floor(x),floor(y),1,1,dir,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
